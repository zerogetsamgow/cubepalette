base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
plot(cube_palettes_discrete)
as_tibble(cube_palettes_discrete)
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
.greens[5],.pinks[5],cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
plot(cube_palettes_discrete)
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
.greens[3],.pinks[3],cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
plot(cube_palettes_discrete)
source("~/R/packages/cubepalette/data-raw/cube_palettes.R")
library(cubepalette)
devtools::load_all()
as_tibble(cube_palettes_discrete)
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1:5]
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
.greys = .greys[1:5]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[.2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1:5]
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
.greys = .greys[1:5]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[.2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
cube_palettes_discrete
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1:5]
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
.greys = .greys[1:5]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[.2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
plot(cube_palettes_discrete)
cube_palettes_tints
library(cubepalette)
plot(cube_palettes)
devtools::document()
devtools::document()
devtools::document("colours.R")
devtools::document()
names(cube_palettes_discrete$base)
cube.colours = pal_colour(cube.green)
cube.colours = pal_colour(cube.green)
names(cube.colours)
cube.colours
cube.colours = pal_colour("cube.green" = cube.green)
cube.colours = pal_colour(cube.green = cube.green)
cube.colours = pal_palette(cube.green = cube.green)
cube.colours
names(cube.colours)
?pal_palettes
cube.colours = pal_factor(cube.green = cube.green,
cube.pink = cube.pink,
cube.black = cube.black)
cube.colours = pal_palette(cube.green = cube.green,
cube.pink = cube.pink,
cube.black = cube.black)
names(cube.colours)
usethis::use_data(cube.colours,overwrite = TRUE)
View(cube.colours)
cube.colours
## code to prepare `cube_palettes` dataset goes here
library(palettes)
# Define and name Cube colours -------------------------------
cube.green = pal_colour("#034638")
usethis::use_data(cube.green, overwrite = TRUE)
cube.pink = pal_colour("#ECBAA8")
usethis::use_data(cube.pink,overwrite = TRUE)
cube.black = pal_colour("black")
usethis::use_data(cube.black,overwrite = TRUE)
cube.white = pal_colour("white")
usethis::use_data(cube.white,overwrite = TRUE)
cube.grey = pal_colour("#D9D9D6")
usethis::use_data(cube.grey,overwrite = TRUE)
cube_colours = pal_palette(cube.green = cube.green,
cube.pink = cube.pink,
cube.black = cube.black,
cube.white = cube.white,
cube.grey = cube.grey)
usethis::use_data(cube_colours,overwrite = TRUE)
#' Cube Group's colour palette uses modern and distinctive tones
#' to convey corporate warmth.
#'
#' @format ## `cube_colours`
#' An object of class `palette` with `r length(cube_colours)` colours.
#' Use `names(cube_colours)` to return all colour names.
#'
#' @examples
#' # Plot all colours
#' plot(cube_colours)
"cube_colours"
devtools::document()
library(cubepalette)
cube.colours
load_all
devtools::load_all
devtools::load_all()
?cube_colours
plot(cube_colours)
devtools::document()
#' @format ## `cube.green`
#' An object of class `colour`.
#'
#' @examples
#' plot(cube.green)
"cube.green"
devtools::document()
devtools::document()
usethis::use_readme_rmd()
devtools::document()
devtools::build_readme()
load("~/R/packages/cubepalette/data/cube_palettes.rda")
usethis::use_readme_rmd()
devtools::build_readme()
devtools::load_all()
devtools::build_readme()
library(cubepalette)
devtools::build_readme()
devtools::build_readme()
install.packages("asciicast")
devtools::build_readme()
cube_palettes_discrete
devtools::build_readme()
.Last.error
length(cube_palettes)
devtools::load_all()
library(cubepalette)
source("~/R/packages/cubepalette/data-raw/cube_palettes.R")
source("~/R/packages/cubepalette/data-raw/cube_palettes.R")
library(cubepalette)
?plot
points(x, cex = .5, col = "dark red")
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
library(cubepalette)
library(cubepalette)
which git
use_git_config(user.name = "Sam Gow", user.email = "sam.gow@gmail.com")
usethis::use_git_config(user.name = "Sam Gow", user.email = "sam.gow@gmail.com")
usethis::create_github_token()
usethis::create_github_token()
gitcreds::gitcreds_set()
usethis::use_github()
usethis::use_github()
usethis::use_github()
sethis::use_git_remote("origin", url = NULL, overwrite = TRUE)`
sethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
usethis::use_github()
usethis::use_package_doc()
2
usethis::use_data(cube_palettes_discrete, overwrite = TRUE)
library(palettes)
# Define and name Cube colours -------------------------------
cube.green = pal_colour("#034638")
usethis::use_data(cube.green, overwrite = TRUE)
cube.pink = pal_colour("#ECBAA8")
usethis::use_data(cube.pink,overwrite = TRUE)
cube.black = pal_colour("black")
usethis::use_data(cube.black,overwrite = TRUE)
cube.white = pal_colour("white")
usethis::use_data(cube.white,overwrite = TRUE)
cube.grey = pal_colour("#D9D9D6")
usethis::use_data(cube.grey,overwrite = TRUE)
cube_colours = pal_palette(cube.green = cube.green,
cube.pink = cube.pink,
cube.black = cube.black,
cube.white = cube.white,
cube.grey = cube.grey)
usethis::use_data(cube_colours,overwrite = TRUE)
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1L:5L]
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
.greys = .greys[1L:5L]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.grey,cube.white),
dark = c(cube.green,cube.pink,cube.grey,
.greens[2L],.pinks[2L],.greys[2L]),
light = c(cube.white,cube.pink,cube.grey,
.greens[3L],.pinks[3L],.greys[3L]),
other = c(cube.green,cube.grey,cube.white,.greens[4L],.greys[2L])
)
plot(cube_palettes_discrete)
# Cube palette tints ----------------------------
cube_palettes_tints =
pal_palette(
greens = .greens,
pinks = .pinks,
greys = .greys
)
plot(cube_palettes_tints)
# Save to data
cube_palettes =
c(
cube_palettes_discrete,
cube_palettes_tints
)
usethis::use_data(cube_palettes_discrete, overwrite = TRUE)
usethis::use_data(cube_palettes_tints, overwrite = TRUE)
usethis::use_data(cube_palettes, overwrite = TRUE)
usethis::use_package_doc()
devtools::document()
devtools::install()
usethis::use_version()
usethis::use_version()
usethis::use_data(cube_palettes_discrete, overwrite = TRUE)
library(palettes)
# Define and name Cube colours -------------------------------
cube.green = pal_colour("#034638")
usethis::use_data(cube.green, overwrite = TRUE)
cube.pink = pal_colour("#ECBAA8")
usethis::use_data(cube.pink,overwrite = TRUE)
cube.black = pal_colour("black")
usethis::use_data(cube.black,overwrite = TRUE)
cube.white = pal_colour("white")
usethis::use_data(cube.white,overwrite = TRUE)
cube.grey = pal_colour("#D9D9D6")
usethis::use_data(cube.grey,overwrite = TRUE)
cube_colours = pal_palette(cube.green = cube.green,
cube.pink = cube.pink,
cube.black = cube.black,
cube.white = cube.white,
cube.grey = cube.grey)
usethis::use_data(cube_colours,overwrite = TRUE)
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1L:5L]
.greys = pal_ramp(c(cube.black,cube.white),n=6)
.greys = .greys[1L:5L]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.grey,cube.white),
dark = c(cube.green,cube.pink,cube.black,
.greens[2L],.pinks[2L],.greys[2L]),
light = c(cube.white,cube.pink,cube.black,
.greens[2L],.pinks[2L],.greys[2L]),
other = c(cube.green,cube.grey,cube.white,.greens[2L],.greys[2L])
)
plot(cube_palettes_discrete)
# Cube palette tints ----------------------------
cube_palettes_tints =
pal_palette(
greens = .greens,
pinks = .pinks,
greys = .greys
)
plot(cube_palettes_tints)
# Save to data
cube_palettes =
c(
cube_palettes_discrete,
cube_palettes_tints
)
usethis::use_data(cube_palettes_discrete, overwrite = TRUE)
usethis::use_data(cube_palettes_tints, overwrite = TRUE)
usethis::use_data(cube_palettes, overwrite = TRUE)
devtools::document()
devtools::install()
usethis::use_version()
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1L:5L]
.greys = pal_ramp(c(cube.black,cube.white),n=6)
.greys = .greys[1L:5L]
.greys
## code to prepare `cube_palettes` dataset goes here
library(palettes)
# Define and name Cube colours -------------------------------
cube.green = pal_colour("#034638")
usethis::use_data(cube.green, overwrite = TRUE)
cube.pink = pal_colour("#ECBAA8")
usethis::use_data(cube.pink,overwrite = TRUE)
cube.black = pal_colour("black")
usethis::use_data(cube.black,overwrite = TRUE)
cube.white = pal_colour("white")
usethis::use_data(cube.white,overwrite = TRUE)
cube.grey = pal_colour("#D9D9D6")
usethis::use_data(cube.grey,overwrite = TRUE)
cube_colours = pal_palette(cube.green = cube.green,
cube.pink = cube.pink,
cube.black = cube.black,
cube.white = cube.white,
cube.grey = cube.grey)
usethis::use_data(cube_colours,overwrite = TRUE)
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1L:5L]
.greys = pal_ramp(c(cube.black,cube.white),n=6)
.greys = .greys[1L:5L]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.grey,cube.white),
dark = c(cube.green,cube.pink,cube.black,
.greens[2L],.pinks[2L],.greys[2L]),
light = c(cube.white,cube.pink,cube.black,
.greens[2L],.pinks[2L],.greys[2L]),
other = c(cube.green,cube.grey,cube.white,.greens[2L],.greys[2L])
)
plot(cube_palettes_discrete)
# Cube palette tints ----------------------------
cube_palettes_tints =
pal_palette(
greens = .greens,
pinks = .pinks,
greys = .greys
)
plot(cube_palettes_tints)
# Save to data
cube_palettes =
c(
cube_palettes_discrete,
usethis::use_data(cube_palettes_discrete, overwrite = TRUE)
usethis::use_data(cube_palettes_tints, overwrite = TRUE)
usethis::use_data(cube_palettes, overwrite = TRUE)
usethis::use_data(cube_palettes_discrete, overwrite = TRUE)
usethis::use_data(cube_palettes_tints, overwrite = TRUE)
usethis::use_data(cube_palettes, overwrite = TRUE)
usethis::use_data(cube_colours,overwrite = TRUE)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(cubepalette)
cube.green = pal_colour("#034638")
usethis::use_data(cube.green, overwrite = TRUE)
cube.pink = pal_colour("#ECBAA8")
usethis::use_data(cube.pink,overwrite = TRUE)
cube.black = pal_colour("black")
usethis::use_data(cube.black,overwrite = TRUE)
cube.white = pal_colour("white")
usethis::use_data(cube.white,overwrite = TRUE)
cube.grey = pal_colour("#D9D9D6")
usethis::use_data(cube.grey,overwrite = TRUE)
cube_colours = pal_palette(cube.green = cube.green,
cube.pink = cube.pink,
cube.black = cube.black,
cube.white = cube.white,
cube.grey = cube.grey)
usethis::use_data(cube_colours,overwrite = TRUE)
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1L:5L]
.greys = pal_ramp(c(cube.black,cube.white),n=6)
.greys = .greys[1L:5L]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.grey,cube.white),
dark = c(cube.green,cube.pink,cube.black,
.greens[2L],.pinks[2L],.greys[2L]),
light = c(cube.white,cube.pink,cube.black,
.greens[2L],.pinks[2L],.greys[2L]),
other = c(cube.green,cube.grey,cube.white,.greens[2L],.greys[2L])
)
plot(cube_palettes_discrete)
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.grey,cube.white),
dark = c(cube.green,cube.pink,cube.black,
.greens[3L],.pinks[3L],.greys[3L]),
light = c(cube.white,cube.pink,cube.black,
.greens[5L],.pinks[5L],.greys[5L]),
other = c(cube.green,cube.grey,cube.white,.greens[2L],.greys[2L])
)
plot(cube_palettes_discrete)
cube_palettes_tints =
pal_palette(
greens = .greens,
pinks = .pinks,
greys = .greys
)
plot(cube_palettes_tints)
# Save to data
cube_palettes =
c(
cube_palettes_discrete,
cube_palettes_tints
)
usethis::use_data(cube_palettes_discrete, overwrite = TRUE)
usethis::use_data(cube_palettes_tints, overwrite = TRUE)
usethis::use_data(cube_palettes, overwrite = TRUE)
devtools::document()
devtools::install()
plot(cubepalette::cube.green)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
asciicast::init_knitr_engine(
startup = quote({
library(cubepalette)
set.seed(1) }),
echo = TRUE,
echo_input = FALSE
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
asciicast::init_knitr_engine(
startup = quote({
library(cubepalette)
set.seed(1) }),
echo = TRUE,
echo_input = FALSE
)
plot(cubepalette::cube.green)
plot(cubecolours$cube.green)
plot(cube_colours$cube.green)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
asciicast::init_knitr_engine(
startup = quote({
library(cubepalette)
set.seed(1) }),
echo = TRUE,
echo_input = FALSE
)
plot(cube_colours$cube.green)
devtools::install()
plot(cube_palettes_discrete)
plot(cubepalettes::cube_palettes_discrete)
devtools::load_all()
plot(cube.green)
devtools::document()
devtools::install()
devtools::load_all()
usethis::use_package("readpc")
usethis::create_package("readpc")
here()
here::dr_here()
install.packages("here")
usethis::use_version()
devtools::load_all(".")
devtools::load_all(".")
