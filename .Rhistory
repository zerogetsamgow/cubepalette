pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
scales::alpha(cube.green,.8),
scales::alpha(cube.pink,.8),
cube.grey),
light = c(cube.white,cube.pink,cube.black,
scales::alpha(cube.green,.4),
scales::alpha(cube.pink,.4),
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey,
scales::alpha(cube.green,.8),
scales::alpha(cube.grey,.4))
)
plot(cube_palettes_discrete)
# Cube palette tints ----------------------------
cube_palettes_tints =
pal_palette(
greens =
c(cube.green,
scales::alpha(cube.green,.8),
scales::alpha(cube.green,.6),
scales::alpha(cube.green,.4),
scales::alpha(cube.green,.2)
),
pinks =
c(cube.pink,
scales::alpha(cube.pink,.8),
scales::alpha(cube.pink,.6),
scales::alpha(cube.pink,.4),
scales::alpha(cube.pink,.2)
),
)
plot(cube_palettes_tints)
# Save to data
cube_paletttes =
c(
cube_palettes_discrete,
cube_palettes_tints
)
cube_palette_namedcolours =
c(
cube.green,
cube.pink,
cube.black,
cube.white,
cube.grey
)
usethis::use_data(cube_palettes, overwrite = TRUE)
library(cubepalette)
devtools::load_all(".")
cube_palette_namedcolours
load("~/R/packages/cubepalette/data/cube.black.rda")
devtools::load_all()
cube.black
cube.white
devtools::load_all()
library(cubepalette)
devtools::load_all()
load("~/R/packages/cubepalette/data/cube.white.rda")
cube.black
cube_palette_namedcolours
cube_colours
cube_paletttes("dark")
cube_palettes("dark")
cube_palettes()
cube_palettes
# Save to data
cube_palettes =
c(
cube_palettes_discrete,
cube_palettes_tints
)
usethis::use_data(cube_palettes, overwrite = TRUE)
source("~/R/packages/cubepalette/data-raw/cube_palettes.R")
cube_palettes_discrete
cube_palettes_discrete$dark
plot(cube_palettes_discrete)
# Define Cube palettes usgin colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
pal_colour(scales::alpha(cube.green,.8)),
scales::alpha(cube.pink,.8),
cube.grey),
light = c(cube.white,cube.pink,cube.black,
scales::alpha(cube.green,.4),
scales::alpha(cube.pink,.4),
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey,
scales::alpha(cube.green,.8),
scales::alpha(cube.grey,.4))
)
plot(cube_palettes_discrete)
cube_palettes_tints =
pal_palette(
greens =
c(cube.green,
scales::alpha(cube.green,.8),
scales::alpha(cube.green,.6),
scales::alpha(cube.green,.4),
scales::alpha(cube.green,.2)
),
pinks =
c(cube.pink,
scales::alpha(cube.pink,.8),
scales::alpha(cube.pink,.6),
scales::alpha(cube.pink,.4),
scales::alpha(cube.pink,.2)
),
)
plot(cube_palettes_tints)
# Save to data
cube_palettes =
c(
cube_palettes_discrete,
cube_palettes_tints
)
usethis::use_data(cube_palettes, overwrite = TRUE)
library(cubepalette)
cube_palettes_discrete$dark
cube.pink.2=pal_colour(scales::alpha(cube.green,.8))
cube.pink.2=pal_colour(scales::alpha(cube.pink,.8))
cube.pink.2
cube.pink.2=scales::alpha(cube.pink,.8)
cube.pink.2
cube.pink.2 = pal_colour("#ECBAA8CC")
cube.pink.2
plor(cube.pink)
plot(cube.pink)
plot(cube.pink.2)
source("~/R/packages/cubepalette/data-raw/cube_palettes.R")
library(cubepalette)
remove(cube.pink.2)
cube_palettes_tints$greens
plot(cube_palettes_tints$greens)
plot(cube_palettes_tints$greens[1])
plot(cube_palettes_tints$greens[2])
cube_palettes_tints$greens[1]
cube_palettes_tints$greens[2]
cube_palettes_tints$greys[2]
source("~/R/packages/cubepalette/data-raw/cube_palettes.R")
library(cubepalette)
cube_palettes_tints$greys
plot(cube_palettes_tints$grets)
plot(cube_palettes_tints$greys)
use_package_doc()
usethis::use_package_doc()
#' @keywords internal
"_PACKAGE"
#' Internal pallets methods
#'
#' @import palettes
#' @keywords internal
#' @name cube_palletes
NULL
library(cubepalette)
usethis::use_r("colours")
as_tibble(cube_palettes_tints)
#' Cube Colours
#'
#' Cube Group's colour palette uses modern and distinctive tones
#' to convey corporate warmth.
#'
#' The Cube Group Green
cube.green
#' Cube Colours
#'
#' Cube Group's colour palette uses modern and distinctive tones
#' to convey corporate warmth.
#'
#' The Cube Group Green
plot(cube.green)
greens = pal_ramp(c(cube.green,cube.white),n=4)
greens
plot(greens)
cube_palettes_tints =
pal_palette(
greens = pal_ramp(c(cube.green,cube.white),n=5)
c(cube.green,
greens = pal_ramp(c(cube.green,cube.white),n=5)
greens
plot(greens)
cube_palettes_tints =
pal_palette(
greens = pal_ramp(c(cube.green,cube.white),n=6),
pinks = pal_ramp(c(cube.pink,cube.white),n=6),
greys = pal_ramp(c(cube.grey,cube.white),n=6))
plot(cube_palettes_tints)
as_tibble(cube_palettes_tints)
cube_palettes_tints = cube_palettes_tints[1:5,7:11,13:16]
cube_palettes_tints = cube_palettes_tints[1:5]
cube_palettes_tints = c(cube_palettes_tints$greens[1:5])
cube_palettes_tints
.greens = pal_ramp(c(cube.green,cube.white),n=6)
cube_palettes_tints =
pal_palette(
greens = pal_palette(.greens[1:5]),
pinks = pal_ramp(c(cube.pink,cube.white),n=6),
greys = pal_ramp(c(cube.grey,cube.white),n=6)
)
.greens = pal_ramp(c(cube.green,cube.white),n=6)
cube_palettes_tints =
pal_palette(
greens = .greens[1:5],
pinks = pal_ramp(c(cube.pink,cube.white),n=6),
greys = pal_ramp(c(cube.grey,cube.white),n=6)
)
cube_palettes_tints
plot(cube_palettes_tints)
# Cube palette tints ----------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6)
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
cube_palettes_tints =
pal_palette(
greens = .greens[1:5],
pinks = .pinks[1:5],
greys = .greys[1:5]
)
plot(cube_palettes_tints)
?pal_ramp
# Cube palette tints ----------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate = ="spline")
# Cube palette tints ----------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens
plot(.greens)
# Cube palette tints ----------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="linear")
plot(.greens)
## code to prepare `cube_palettes` dataset goes here
library(palettes)
# Define and name Cube colours -------------------------------
cube.green = pal_colour("#034638")
usethis::use_data(cube.green, overwrite = TRUE)
cube.pink = pal_colour("#ECBAA8")
usethis::use_data(cube.pink,overwrite = TRUE)
cube.black = pal_colour("black")
usethis::use_data(cube.black,overwrite = TRUE)
cube.white = pal_colour("white")
usethis::use_data(cube.white,overwrite = TRUE)
cube.grey = pal_colour("#D9D9D6")
usethis::use_data(cube.grey,overwrite = TRUE)
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,cube.grey),
light = c(cube.white,cube.pink,cube.black,cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
plot(cube_palettes_discrete)
# Cube palette tints ----------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
cube_palettes_tints =
pal_palette(
greens = .greens[1:5],
pinks = .pinks[1:5],
greys = .greys[1:5]
)
plot(cube_palettes_tints)
# Save to data
cube_palettes =
c(
cube_palettes_discrete,
cube_palettes_tints
)
usethis::use_data(cube_palettes, overwrite = TRUE)
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1:5]
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
.greys = .greys[1:5]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[.2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1:5]
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
.greys = .greys[1:5]
.greens[2]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
plot(cube_palettes_discrete)
as_tibble(cube_palettes_discrete)
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
.greens[5],.pinks[5],cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
plot(cube_palettes_discrete)
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
.greens[3],.pinks[3],cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
plot(cube_palettes_discrete)
source("~/R/packages/cubepalette/data-raw/cube_palettes.R")
library(cubepalette)
devtools::load_all()
as_tibble(cube_palettes_discrete)
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1:5]
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
.greys = .greys[1:5]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[.2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1:5]
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
.greys = .greys[1:5]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[.2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
cube_palettes_discrete
# Create tints ----------------------------------------------
.greens = pal_ramp(c(cube.green,cube.white),n=6, interpolate ="spline")
.greens = .greens[1:5]
.pinks = pal_ramp(c(cube.pink,cube.white),n=6)
.pinks = .pinks[1:5]
.greys = pal_ramp(c(cube.grey,cube.white),n=6)
.greys = .greys[1:5]
# Define Cube palettes using colours from above ------------
cube_palettes_discrete =
pal_palette(
base = c(cube.green,cube.pink,cube.black,cube.white,cube.grey),
dark = c(cube.green,cube.pink,cube.black,
.greens[2],.pinks[.2],cube.grey),
light = c(cube.white,cube.pink,cube.black,
cube.grey),
other = c(cube.green,cube.black,cube.white,cube.grey)
)
plot(cube_palettes_discrete)
cube_palettes_tints
library(cubepalette)
plot(cube_palettes)
devtools::document()
devtools::document()
devtools::document("colours.R")
devtools::document()
names(cube_palettes_discrete$base)
cube.colours = pal_colour(cube.green)
cube.colours = pal_colour(cube.green)
names(cube.colours)
cube.colours
cube.colours = pal_colour("cube.green" = cube.green)
cube.colours = pal_colour(cube.green = cube.green)
cube.colours = pal_palette(cube.green = cube.green)
cube.colours
names(cube.colours)
?pal_palettes
cube.colours = pal_factor(cube.green = cube.green,
cube.pink = cube.pink,
cube.black = cube.black)
cube.colours = pal_palette(cube.green = cube.green,
cube.pink = cube.pink,
cube.black = cube.black)
names(cube.colours)
usethis::use_data(cube.colours,overwrite = TRUE)
View(cube.colours)
cube.colours
## code to prepare `cube_palettes` dataset goes here
library(palettes)
# Define and name Cube colours -------------------------------
cube.green = pal_colour("#034638")
usethis::use_data(cube.green, overwrite = TRUE)
cube.pink = pal_colour("#ECBAA8")
usethis::use_data(cube.pink,overwrite = TRUE)
cube.black = pal_colour("black")
usethis::use_data(cube.black,overwrite = TRUE)
cube.white = pal_colour("white")
usethis::use_data(cube.white,overwrite = TRUE)
cube.grey = pal_colour("#D9D9D6")
usethis::use_data(cube.grey,overwrite = TRUE)
cube_colours = pal_palette(cube.green = cube.green,
cube.pink = cube.pink,
cube.black = cube.black,
cube.white = cube.white,
cube.grey = cube.grey)
usethis::use_data(cube_colours,overwrite = TRUE)
#' Cube Group's colour palette uses modern and distinctive tones
#' to convey corporate warmth.
#'
#' @format ## `cube_colours`
#' An object of class `palette` with `r length(cube_colours)` colours.
#' Use `names(cube_colours)` to return all colour names.
#'
#' @examples
#' # Plot all colours
#' plot(cube_colours)
"cube_colours"
devtools::document()
library(cubepalette)
cube.colours
load_all
devtools::load_all
devtools::load_all()
?cube_colours
plot(cube_colours)
devtools::document()
#' @format ## `cube.green`
#' An object of class `colour`.
#'
#' @examples
#' plot(cube.green)
"cube.green"
devtools::document()
devtools::document()
usethis::use_readme_rmd()
devtools::document()
devtools::build_readme()
load("~/R/packages/cubepalette/data/cube_palettes.rda")
usethis::use_readme_rmd()
devtools::build_readme()
devtools::load_all()
devtools::build_readme()
library(cubepalette)
devtools::build_readme()
devtools::build_readme()
install.packages("asciicast")
devtools::build_readme()
cube_palettes_discrete
devtools::build_readme()
.Last.error
length(cube_palettes)
devtools::load_all()
library(cubepalette)
source("~/R/packages/cubepalette/data-raw/cube_palettes.R")
source("~/R/packages/cubepalette/data-raw/cube_palettes.R")
library(cubepalette)
?plot
points(x, cex = .5, col = "dark red")
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
points(x, cex = .5, col = "dark red")
library(cubepalette)
library(cubepalette)
which git
use_git_config(user.name = "Sam Gow", user.email = "sam.gow@gmail.com")
usethis::use_git_config(user.name = "Sam Gow", user.email = "sam.gow@gmail.com")
usethis::create_github_token()
usethis::create_github_token()
gitcreds::gitcreds_set()
usethis::use_github()
usethis::use_github()
usethis::use_github()
sethis::use_git_remote("origin", url = NULL, overwrite = TRUE)`
sethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
usethis::use_github()
